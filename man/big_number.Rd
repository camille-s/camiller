% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/big_number.R
\name{big_number}
\alias{big_number}
\alias{big_money}
\title{Abbreviate large numbers by order of magnitude}
\usage{
big_number(x, digits = 2)

big_money(x, digits = 2, currency = "$")
}
\arguments{
\item{x}{A numeric vector}

\item{digits}{Number of digits (significant figures) to keep; defaults to 2}

\item{currency}{Symbol to use to denote currency; defaults \code{"$"}}
}
\value{
A character vector
}
\description{
This picks out the order of magnitude of each number in a vector and returns a formatted abbreviation, such as 1230 --> 1.2k. It handles abbreviations through the trillions; after that, it's suggested that you switch over to scientific notation. The convenience of this function over those from the \code{scales} package is that you can mix & match orders of magnitude. Its sibling \code{big_money} tacks on a currency symbol, placed after a negative sign if applicable.
}
\examples{
big_number(c(123, 12345, 1234567), digits = 3)
big_number(c(-12000, 15000, 16000, 77777))
big_money(c(-12000, 15000, 16000, 2e6))

# take care of your significant digits choices
purrr::map_chr(1:3, ~big_number(987, digits = .))
}
